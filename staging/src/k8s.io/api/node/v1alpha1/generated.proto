/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package k8s.io.api.node.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "k8s.io/apimachinery/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// RuntimeClass defines a class of runtime supported in the cluster.
message RuntimeClass {
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Specification of the RuntimeClass
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
  optional RuntimeClassSpec spec = 2;
}

// RuntimeClassList is a list of RuntimeClass objects.
message RuntimeClassList {
  // Standard list metadata.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of schema objects.
  repeated RuntimeClass items = 2;
}

// RuntimeClassSpec is a specification of a RuntimeClass.
message RuntimeClassSpec {
  // RuntimeHandler specifies the underlying runtime the CRI calls to handle pod and/or container
  // creation. The possible values are specific to a given configuration & CRI implementation.
  // The empty string is equivalent to the default behavior.
  // +optional
  optional string runtimeHandler = 1;
}

