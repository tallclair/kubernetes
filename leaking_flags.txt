Godeps/_workspace/src/github.com/google/cadvisor/manager/machine.go:38:var bootIdFilePath = flag.String("boot_id_file", "/proc/sys/kernel/random/boot_id", "Comma-separated list of files to check for boot-id. Use the first one that exists.")
Godeps/_workspace/src/github.com/google/cadvisor/container/raw/container_hints.go:28:var argContainerHints = flag.String("container_hints", "/etc/cadvisor/container_hints.json", "location of the container hints file")
Godeps/_workspace/src/github.com/google/cadvisor/container/docker/factory.go:37:var ArgDockerEndpoint = flag.String("docker", "unix:///var/run/docker.sock", "docker endpoint")
Godeps/_workspace/src/github.com/google/cadvisor/container/raw/factory.go:29:var dockerOnly = flag.Bool("docker_only", false, "Only report docker containers in addition to root stats")
Godeps/_workspace/src/github.com/google/cadvisor/container/docker/factory.go:43:var dockerRootDir = flag.String("docker_root", "/var/lib/docker", "Absolute path to the Docker state root directory (default: /var/lib/docker)")
Godeps/_workspace/src/github.com/google/cadvisor/container/docker/factory.go:44:var dockerRunDir = flag.String("docker_run", "/var/run/docker", "Absolute path to the Docker run directory (default: /var/run/docker)")
Godeps/_workspace/src/github.com/google/cadvisor/manager/manager.go:48:var enableLoadReader = flag.Bool("enable_load_reader", false, "Whether to enable cpu load reader")
Godeps/_workspace/src/github.com/google/cadvisor/manager/manager.go:49:var eventStorageAgeLimit = flag.String("event_storage_age_limit", "default=24h", "Max length of time for which to store events (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or \"default\" and the value is a duration. Default is applied to all non-specified event types")
Godeps/_workspace/src/github.com/google/cadvisor/manager/manager.go:50:var eventStorageEventLimit = flag.String("event_storage_event_limit", "default=100000", "Max number of events to store (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or \"default\" and the value is an integer. Default is applied to all non-specified event types")
Godeps/_workspace/src/github.com/google/cadvisor/manager/manager.go:46:var globalHousekeepingInterval = flag.Duration("global_housekeeping_interval", 1*time.Minute, "Interval between global housekeepings")
Godeps/_workspace/src/github.com/google/cadvisor/manager/container.go:44:var HousekeepingInterval = flag.Duration("housekeeping_interval", 1*time.Second, "Interval between container housekeepings")
Godeps/_workspace/src/github.com/google/cadvisor/manager/manager.go:47:var logCadvisorUsage = flag.Bool("log_cadvisor_usage", false, "Whether to log the usage of the cAdvisor container")
Godeps/_workspace/src/github.com/google/cadvisor/manager/machine.go:37:var machineIdFilePath = flag.String("machine_id_file", "/etc/machine-id,/var/lib/dbus/machine-id", "Comma-separated list of files to check for machine-id. Use the first one that exists.")
Godeps/_workspace/src/github.com/google/cadvisor/container/docker/factory.go:50:var noSystemd = flag.Bool("nosystemd", false, "Explicitly disable systemd support for Docker containers")
Godeps/_workspace/src/github.com/google/cadvisor/storage/common_flags.go:28:var ArgDbBufferDuration = flag.Duration("storage_driver_buffer_duration", 60*time.Second, "Writes in the storage driver will be buffered for this duration, and committed to the non memory backends as a single transaction")
Godeps/_workspace/src/github.com/google/cadvisor/storage/common_flags.go:25:var ArgDbName = flag.String("storage_driver_db", "cadvisor", "database name")
Godeps/_workspace/src/github.com/google/cadvisor/storage/common_flags.go:24:var ArgDbHost = flag.String("storage_driver_host", "localhost:8086", "database host:port")
Godeps/_workspace/src/github.com/google/cadvisor/storage/common_flags.go:23:var ArgDbPassword = flag.String("storage_driver_password", "root", "database password")
Godeps/_workspace/src/github.com/google/cadvisor/storage/common_flags.go:27:var ArgDbIsSecure = flag.Bool("storage_driver_secure", false, "use secure connection with database")
Godeps/_workspace/src/github.com/google/cadvisor/storage/common_flags.go:26:var ArgDbTable = flag.String("storage_driver_table", "stats", "table name")
Godeps/_workspace/src/github.com/google/cadvisor/storage/common_flags.go:22:var ArgDbUsername = flag.String("storage_driver_user", "root", "database username")
